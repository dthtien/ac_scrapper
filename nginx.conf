# This is a template. Referenced variables (e.g. $RAILS_ROOT) need
# to be rewritten with real values in order for this file to work.

upstream rails_app {
  server backend:3000;
}

server {
  listen 80;
  listen [::]:80;
  server_name ac.tcyrus.dev;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/app_name;
  }

  location / {
    rewrite ^ https://$host$request_uri? permanent;
  }
}

server {
  listen 443 default_server ssl http2;
  listen [::]:443 ssl http2;
  server_name ac.tcyrus.dev;


  ssl_certificate /etc/letsencrypt/live/ac.tcyrus.dev/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/ac.tcyrus.dev/privkey.pem;


  access_log $RAILS_ROOT/log/nginx.access.log;
  error_log $RAILS_ROOT/log/nginx.error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @rails;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  location / {
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;
    proxy_pass http://rails_app;
  }

  root   $RAILS_ROOT;
  index  index.html;
}
